{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","broadcastService","authService","title","loggedIn","checkAccount","subscribe","payload","console","log","handleRedirectCallback","authError","response","error","errorMessage","accessToken","setLogger","logLevel","message","piiEnabled","correlationId","createNewGuid","piiLoggingEnabled","getAccount","login","loginPopup","logout","selector","templateUrl","styleUrls","msalProviders","provide","useClass","multi","AppModule","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","popUp","consentScopes","unprotectedResources","protectedResourceMap","extraQueryParameters","declarations","providers","bootstrap","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { BroadcastService, MsalService } from \"@azure/msal-angular\";\nimport { Logger, CryptoUtils } from \"msal\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent implements OnInit {\n  title = \"HR ADMIN DASHBOARD\";\n  loggedIn = false;\n\n  constructor(\n    private broadcastService: BroadcastService,\n    private authService: MsalService\n  ) {}\n\n  ngOnInit() {\n    this.checkAccount();\n\n    this.broadcastService.subscribe(\"msal:loginSuccess\", (payload) => {\n      console.log(payload);\n      this.checkAccount();\n    });\n\n    this.authService.handleRedirectCallback((authError, response) => {\n      if (authError) {\n        console.error(\"Redirect Error: \", authError.errorMessage);\n        return;\n      }\n\n      console.log(\"Redirect Success: \", response.accessToken);\n    });\n\n    this.authService.setLogger(\n      new Logger(\n        (logLevel, message, piiEnabled) => {\n          console.log(\"MSAL Logging: \", message);\n        },\n        {\n          correlationId: CryptoUtils.createNewGuid(),\n          piiLoggingEnabled: false,\n        }\n      )\n    );\n  }\n\n  checkAccount() {\n    this.loggedIn = !!this.authService.getAccount();\n    if (!this.loggedIn) {\n      this.login();\n    }\n  }\n\n  login() {\n    this.authService.loginPopup();\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","<!-- <mat-toolbar color=\"primary\">\n  <a class=\"title\" href=\"/\">{{ title }}</a>\n\n  <div class=\"toolbar-spacer\"></div>\n\n  <a mat-button [routerLink]=\"['profile']\">Profile</a>\n\n  <button mat-raised-button *ngIf=\"!loggedIn\" (click)=\"login()\">Login</button>\n  <button mat-raised-button *ngIf=\"loggedIn\" (click)=\"logout()\">Logout</button>\n</mat-toolbar> -->\n<!-- <div class=\"container\"> -->\n<!--This is to avoid reload during acquireTokenSilent() because of hidden iframe -->\n<!-- <router-outlet *ngIf=\"!isIframe\"></router-outlet> -->\n<!-- </div> -->\n\n<h1>{{ title }}</h1>\n<div>\n  <button mat-raised-button *ngIf=\"!loggedIn\" (click)=\"login()\">Login</button>\n  <button mat-raised-button *ngIf=\"loggedIn\" (click)=\"logout()\">Logout</button>\n</div>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MsalModule, MsalInterceptor } from \"@azure/msal-angular\";\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\n\nconst msalProviders = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: MsalInterceptor,\n  multi: true,\n};\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MsalModule.forRoot(\n      {\n        auth: {\n          clientId: \"c4f2534b-88d8-4671-9804-495b19e235aa\",\n          authority:\n            \"https://login.microsoftonline.com/8d88c9c2-2058-486d-9cd4-2fc9010326bc\",\n          redirectUri: \"https://health-appuat.azurewebsites.net/logincomplete\",\n        },\n        cache: {\n          cacheLocation: \"localStorage\",\n          storeAuthStateInCookie: true, // set to true for IE 11\n        },\n      },\n      {\n        popUp: true,\n        consentScopes: [\"user.read\", \"openid\", \"profile\"],\n        unprotectedResources: [],\n        protectedResourceMap: [\n          [\"https://graph.microsoft.com/v1.0/me\", [\"user.read\"]],\n        ],\n        extraQueryParameters: {},\n      }\n    ),\n  ],\n  providers: [msalProviders],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}