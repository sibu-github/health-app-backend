{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { BroadcastService, MsalService } from \"@azure/msal-angular\";\nimport { Logger, CryptoUtils } from \"msal\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent implements OnInit {\n  title = \"HR ADMIN DASHBOARD\";\n  loggedIn = false;\n\n  constructor(\n    private http: HttpClient,\n    private broadcastService: BroadcastService,\n    private authService: MsalService\n  ) {}\n\n  ngOnInit() {\n    this.checkAccount();\n\n    this.broadcastService.subscribe(\"msal:loginSuccess\", (payload) => {\n      console.log(\"login success\");\n      console.log(payload);\n      this.checkAccount();\n      this.getProfile();\n    });\n\n    this.broadcastService.subscribe(\"msal:acquireTokenSuccess\", (payload) => {\n      console.log(\"msal:msal:acquireTokenSuccess\");\n      console.log(payload);\n    });\n\n    this.authService.handleRedirectCallback((authError, response) => {\n      if (authError) {\n        console.error(\"Redirect Error: \", authError.errorMessage);\n        return;\n      }\n\n      console.log(\"Redirect Success: \", response.accessToken);\n    });\n\n    this.authService.setLogger(\n      new Logger(\n        (logLevel, message, piiEnabled) => {\n          console.log(\"MSAL Logging: \", message);\n        },\n        {\n          correlationId: CryptoUtils.createNewGuid(),\n          piiLoggingEnabled: false,\n        }\n      )\n    );\n  }\n\n  checkAccount() {\n    console.log(\"check Account\");\n    this.loggedIn = !!this.authService.getAccount();\n  }\n\n  login() {\n    console.log(\"login\");\n    this.authService.loginPopup();\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n  getProfile() {\n    console.log(\"getProfile\");\n    const graphMeEndpoint = \"https://graph.microsoft.com/v1.0/me\";\n    this.authService\n      .acquireTokenSilent({ scopes: [\"user.read\"] })\n      .then((tokenResponse) => {\n        console.log(\"token response is:\", tokenResponse);\n        let { accessToken } = tokenResponse;\n        let headers = new HttpHeaders({\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + accessToken,\n        });\n        this.http\n          .get(graphMeEndpoint, { headers })\n          .toPromise()\n          .then((profile) => {\n            console.log(\"getProfile response\", profile);\n          });\n      });\n  }\n}\n","<!-- <mat-toolbar color=\"primary\">\n  <a class=\"title\" href=\"/\">{{ title }}</a>\n\n  <div class=\"toolbar-spacer\"></div>\n\n  <a mat-button [routerLink]=\"['profile']\">Profile</a>\n\n  <button mat-raised-button *ngIf=\"!loggedIn\" (click)=\"login()\">Login</button>\n  <button mat-raised-button *ngIf=\"loggedIn\" (click)=\"logout()\">Logout</button>\n</mat-toolbar> -->\n<!-- <div class=\"container\"> -->\n<!--This is to avoid reload during acquireTokenSilent() because of hidden iframe -->\n<!-- <router-outlet *ngIf=\"!isIframe\"></router-outlet> -->\n<!-- </div> -->\n\n<h1>{{ title }}</h1>\n<div>\n  <button mat-raised-button *ngIf=\"!loggedIn\" (click)=\"login()\">Login</button>\n  <button mat-raised-button *ngIf=\"loggedIn\" (click)=\"logout()\">Logout</button>\n</div>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MsalModule, MsalInterceptor } from \"@azure/msal-angular\";\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\n\n// const msalProviders = {\n//   provide: HTTP_INTERCEPTORS,\n//   useClass: MsalInterceptor,\n//   multi: true,\n// };\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MsalModule.forRoot(\n      {\n        auth: {\n          clientId: \"c4f2534b-88d8-4671-9804-495b19e235aa\",\n          authority:\n            \"https://login.microsoftonline.com/8d88c9c2-2058-486d-9cd4-2fc9010326bc\",\n          redirectUri: \"https://health-appuat.azurewebsites.net/logincomplete\",\n        },\n        cache: {\n          cacheLocation: \"localStorage\",\n          storeAuthStateInCookie: true, // set to true for IE 11\n        },\n      },\n      {\n        popUp: true,\n        consentScopes: [\"user.read\", \"openid\", \"profile\"],\n        unprotectedResources: [],\n        protectedResourceMap: [\n          [\"https://graph.microsoft.com/v1.0/me\", [\"user.read\"]],\n        ],\n        extraQueryParameters: {},\n      }\n    ),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}